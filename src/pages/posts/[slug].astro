---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import formatDate from "@/utils/formatDate";
import type { CollectionEntry } from "astro:content";
import { marked } from "marked";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"posts">;
};

const { post } = Astro.props;
const {
  post: {
    data: { title, description, publishedAt, postState },
  },
} = Astro.props;
let parsedDescription = marked.parse(description);
const { Content } = await post.render();
---

<head>
<script is:inline type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    "headline": `${title}`,
    "description": `${description}`,
    "author": {
      "@type": "Person",
      "name": "Gavin Daly"
    },
    "datePublished": `${publishedAt.toISOString()}`,
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": `${Astro.url}`
    }
  }
</script>

</head>

<Layout title={title} description={description}>
  <main class="my-10 post mx-auto flex w-full max-w-prose flex-col gap-4">
    <header role="presentation" class="justify-between align-baseline">
      <h1 class="text-4xl">
        {title}
      </h1>
      <p class="flex gap-6">
        <span>{postState}</span>
        <time class="italic" datetime={formatDate(publishedAt)}>
          {formatDate(publishedAt)}
        </time>
      </p>
    </header>

    <Content />
  </main>
</Layout>
